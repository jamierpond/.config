#!/bin/bash

set -euo pipefail

# Defaults
branch="HEAD"
args=()

# Parse args
while [[ $# -gt 0 ]]; do
  case "$1" in
    --branch|-b)
      branch="$2"
      shift 2
      ;;
    *)
      args+=("$1")
      shift
      ;;
  esac
done

# No args at all and default branch: plain git diff
if [ ${#args[@]} -eq 0 ] && [ "$branch" = "HEAD" ]; then
  git diff
  exit 0
fi

git_root=$(git rev-parse --show-toplevel)
cd "$git_root"

# If no excludes but branch was specified, diff whole tree
if [ ${#args[@]} -eq 0 ]; then
  git diff "$branch"
  exit 0
fi

# Build grep pattern
pattern=$(printf "|%s" "${args[@]}")
pattern=${pattern:1}

# Filter files
matching_files=$(git ls-files | grep -Ev "$pattern" || true)

if [ -z "$matching_files" ]; then
  echo "No files left after exclusions: ${args[*]}"
  exit 0
fi

git diff "$branch" -- $matching_files

